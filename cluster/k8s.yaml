apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: db
          image: postgres:9.6
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: game-ledger
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: secret-db-auth
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-db-auth
                  key: password
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  ports:
    - port: 8000
      targetPort: 8000
  selector:
    app: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: game-ledger
          image: game-ledger-backend:0.1.0
          ports:
            - containerPort: 8000
          env:
            - name: FLASK_ENV
              value: production
              # value: development
            - name: APP_NUM_WORKERS
              value: "1"
            - name: APP_HOST
              value: "0.0.0.0"
            - name: APP_PORT
              value: "8000"
            - name: gameledger__postgres_host
              value: db
            - name: POSTGRES_PORT
              value: "5432"
            - name: gameledger__postgres_db
              value: game-ledger
            - name: gameledger__postgres_user
              valueFrom:
                secretKeyRef:
                  name: secret-db-auth
                  key: username
            - name: gameledger__postgres_password
              valueFrom:
                secretKeyRef:
                  name: secret-db-auth
                  key: password
            - name: gameledger__elasticemail_api_key
              valueFrom:
                secretKeyRef:
                  name: secret-elasticmail
                  key: apiKey
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: game-ledger
          image: game-ledger-frontend:0.1.0
          ports:
            - containerPort: 3000
          env:
            - name: gameledger__postgres_host
              value: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config2
data:
  nginx.conf: |-
    events {}
    http {
      upstream backend {
        server backend:8000;
        # server host.docker.internal:5000; # Use for local deployment
      }
      upstream frontend {
        server frontend:3000;
        # server host.docker.internal:3000; # Use for local deployment
      }

      server {
        listen 80;
        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: nginx-config2
      containers:
        - name: nginx
          image: nginx:1.21
          ports:
            - containerPort: 80
          env:
            - name: gameledger__postgres_host
              value: postgres
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nginx
              readOnly: true
      restartPolicy: Always
